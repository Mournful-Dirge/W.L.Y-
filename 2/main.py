from helper import DesertGame
import numpy as np # type: ignore

# 第一关的参数设置
params_level1 = {
    'T': 30,
    'N': 27,
    'M': 100,
    'G': 1000,
    'L': 1200,
    'S0': 10000,
    'W1': 3,
    'W2': 2,
    'P1': 5,
    'P2': 10,
    'A': [8, 8, 5, 5, 5, 8, 5, 5, 8, 8, 5, 8, 5, 8, 8, 8, 5, 5, 8, 8, 5, 5, 8, 5, 8, 8, 5, 5, 8, 8],
    'B': [10, 10, 7, 6, 7, 10, 6, 7, 10, 10, 6, 10, 6, 10, 10, 10, 7, 7, 10, 10, 7, 7, 10, 7, 10, 10, 7, 7, 10, 10],
    'C': [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0],
    'D': [1] + [0] * 26,  # 起点是村庄
    'E': [0] * 27,        # 没有矿山
    'F': [0] * 26 + [1],  # 最后一个区域是终点
    'H': np.eye(27),      # 相邻区域矩阵
    'map_layout': {i: (i % 5 * 2, i // 5 * 2) for i in range(27)}  # 简单地图布局
}

# 第二关的参数设置
params_level2 = {
    'T': 30,
    'N': 64,
    'M': 100,
    'G': 1000,
    'L': 1200,
    'S0': 10000,
    'W1': 3,
    'W2': 2,
    'P1': 5,
    'P2': 10,
    'A': [8, 8, 5, 5, 5, 8, 5, 5, 8, 8, 5, 8, 5, 8, 8, 8, 5, 5, 8, 8, 5, 5, 8, 5, 8, 8, 5, 5, 8, 8],
    'B': [10, 10, 7, 6, 7, 10, 6, 7, 10, 10, 6, 10, 6, 10, 10, 10, 7, 7, 10, 10, 7, 7, 10, 7, 10, 10, 7, 7, 10, 10],
    'C': [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0],
    'D': [1] + [0] * 63,  # 起点是村庄
    'E': [0] * 64,        # 没有矿山
    'F': [0] * 63 + [1],  # 最后一个区域是终点
    'H': np.eye(64),      # 相邻区域矩阵
    'map_layout': {i: (i % 8 * 2, i // 8 * 2) for i in range(64)}  # 简单地图布局
}

# 初始化第一关游戏
game_level1 = DesertGame(params_level1)

# 模拟第一关游戏过程
print("第一关:")
game_level1.simulate()
game_level1.visualize_map()
game_level1.visualize_states()

# 初始化第二关游戏
game_level2 = DesertGame(params_level2)

# 模拟第二关游戏过程
print("第二关:")
game_level2.simulate()
game_level2.visualize_map()
game_level2.visualize_states()